<Window x:Class="Shutty.MainWindow"
        x:Name="MeinFenster"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Shutty"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        Title="Shutdown Timer"
        WindowState="Maximized"
        Background="#102030"
        Height="600"
        Width="900"
        DataContext="{Binding Mode=OneWay, RelativeSource={RelativeSource Self}}">

    <Window.Resources>      

        <Style x:Key="DefaultButton"
               TargetType="{x:Type Button}">
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Height"
                    Value="80" />
            <Setter Property="Width"
                    Value="180" />
            <Setter Property="FontSize"
                    Value="32" />
            <Setter Property="Background"
                    Value="#203040" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Foreground"
                    Value="WhiteSmoke" />
            <Setter Property="Template"
                    Value="{DynamicResource MyButton}" />
        </Style>
        
        <Style TargetType="{x:Type RadioButton}"
               BasedOn="{StaticResource {x:Type ToggleButton}}">
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="Height"
                    Value="70" />
            <Setter Property="Width"
                    Value="150" />
            <Setter Property="FontSize"
                    Value="32" />
            <Setter Property="Background"
                    Value="#203040" />
            <Setter Property="Foreground"
                    Value="WhiteSmoke" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Template"
                    Value="{DynamicResource MyToggleButton}" />
        </Style>

        <!-- Button Control Templates-->
        
        <SolidColorBrush x:Key="Button.MouseOver.Background"
                         Color="#2b5797" />
        <SolidColorBrush x:Key="Button.Pressed.Background"
                         Color="#2d89ef" />
        <SolidColorBrush x:Key="Button.Disabled.Background"
                         Color="#1d1d1d" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground"
                         Color="#FF838383" />
        
        <ControlTemplate x:Key="MyButton"
                         TargetType="{x:Type ButtonBase}">
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderThickness="0"
                    SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted"
                         Value="true">
                    <Setter Property="BorderBrush"
                            TargetName="border"
                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="true">
                    <Setter Property="Background"
                            TargetName="border"
                            Value="{StaticResource Button.MouseOver.Background}" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="true">
                    <Setter Property="Background"
                            TargetName="border"
                            Value="{StaticResource Button.Pressed.Background}" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="false">
                    <Setter Property="Background"
                            TargetName="border"
                            Value="{StaticResource Button.Disabled.Background}" />
                    <Setter Property="TextElement.Foreground"
                            TargetName="contentPresenter"
                            Value="{StaticResource Button.Disabled.Foreground}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate TargetType="{x:Type ToggleButton}"
                         x:Key="MyToggleButton">
            <Border x:Name="border"
                    Background="{TemplateBinding Background}"
                    BorderThickness="0"
                    SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted"
                         Value="true">
                    <Setter Property="BorderBrush"
                            TargetName="border"
                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="true">
                    <Setter Property="Background"
                            TargetName="border"
                            Value="{StaticResource Button.MouseOver.Background}" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="true">
                    <Setter Property="Background"
                            TargetName="border"
                            Value="{StaticResource Button.Pressed.Background}" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="false">
                    <Setter Property="Background"
                            TargetName="border"
                            Value="{StaticResource Button.Disabled.Background}" />
                    <Setter Property="TextElement.Foreground"
                            TargetName="contentPresenter"
                            Value="{StaticResource Button.Disabled.Foreground}" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="true">
                    <Setter Property="Background"
                            TargetName="border"
                            Value="{StaticResource Button.Pressed.Background}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>    
        
    </Window.Resources>

    <DockPanel x:Name="LayoutRoot"
               LastChildFill="False">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AppStates">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="00:00:00.3">
                        <VisualTransition.GeneratedEasingFunction>
                            <CubicEase EasingMode="EaseInOut" />
                        </VisualTransition.GeneratedEasingFunction>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="StateButtons" />
                <VisualState x:Name="StateCountDown">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DetailsPanel"
                                                       Storyboard.TargetProperty="(FrameworkElement.Width)">
                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                  Value="500" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ActionButtonPanel"
                                                       Storyboard.TargetProperty="(FrameworkElement.Width)">
                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                  Value="0" />
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimerSelection"
                                                       Storyboard.TargetProperty="(FrameworkElement.Width)">
                            <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                  Value="0" />
                        </DoubleAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot"
                                                       Storyboard.TargetProperty="(Panel.Background)">
                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                <DiscreteObjectKeyFrame.Value>
                                    <SolidColorBrush Color="Black" />
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <b:Interaction.Behaviors>
            <b:DataStateBehavior TrueState="StateCountDown"
                                 FalseState="StateButtons"
                                 Value="True"
                                 Binding="{Binding ElementName=MeinFenster,Path=ShowCountDown,Mode=OneWay}">
            </b:DataStateBehavior>
        </b:Interaction.Behaviors>
        <Grid x:Name="TimerSelection"
              Width="{Binding ElementName=LayoutRoot, Path=ActualWidth, Converter={local:SizeConverter RelativeSize=0.65}, Mode=OneWay}"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              DockPanel.Dock="Left">
            <Grid.RowDefinitions>
                <RowDefinition  Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <TextBlock Text="Select Timer"
                       FontSize="32"
                       Foreground="WhiteSmoke"
                       Margin="15" />

            <ScrollViewer x:Name="Scrolly"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Auto"
                          Grid.Row="1"
                          Margin="10"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch">
                <WrapPanel x:Name="TimeSelection"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           Width="{Binding ElementName=Scrolly,Path=ActualWidth, Converter={local:SizeConverter RelativeSize=0.95},Mode=OneWay}">
                    <b:Interaction.Behaviors>
                        <b:FluidMoveBehavior AppliesTo="Children"
                                             Duration="00:00:00.5000000">
                            <b:FluidMoveBehavior.EaseY>
                                <CubicEase EasingMode="EaseInOut" />
                            </b:FluidMoveBehavior.EaseY>
                            <b:FluidMoveBehavior.EaseX>
                                <CubicEase EasingMode="EaseInOut" />
                            </b:FluidMoveBehavior.EaseX>
                        </b:FluidMoveBehavior>
                    </b:Interaction.Behaviors>
                    <RadioButton Content="0.5"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="5"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="10"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="15"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="20"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="25"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="30"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="35"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="40"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="45"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="50"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="60"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="90"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="120"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="180"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="240"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="300"
                                 Checked="TimerButton_Checked" />
                    <RadioButton Content="360"
                                 Checked="TimerButton_Checked" />
                </WrapPanel>
            </ScrollViewer>
        </Grid>

        <!-- Shutdown Buttons -->

        <StackPanel x:Name="ActionButtonPanel"
                    DockPanel.Dock="Left"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                    IsEnabled="False"
                    Width="220">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}"
                       BasedOn="{StaticResource DefaultButton}" />
            </StackPanel.Resources>
            <TextBlock Text="Select Action"
                       Margin="15"
                       Foreground="WhiteSmoke"
                       FontSize="32" />
            <Button x:Name="ShutdownButton"
                    Margin="5 12 5 5"
                    Content="Shutdown"
                    Click="ActionButton_Click" />
            <Button x:Name="HiberButton"
                    Content="Hibernate"
                    Click="ActionButton_Click" />
            <Button x:Name="RebootButton"
                    Content="Reboot"
                    Click="ActionButton_Click" />
        </StackPanel>

        <!-- Shutdown timer visualisation -->

        <StackPanel x:Name="DetailsPanel"
                    DockPanel.Dock="Top"
                    VerticalAlignment="Center"
                    Width="0">

            <TextBlock Text="{Binding ShutdownAction}"
                       HorizontalAlignment="Center"
                       Margin="15"
                       Foreground="WhiteSmoke"
                       FontSize="48" />
            
            <TextBlock Text="Closing this app will cancel the timer."
                       Margin="5"
                        HorizontalAlignment="Center"
                       Foreground="WhiteSmoke"
                       FontSize="18"/>

            <TextBlock FontSize="32"
                       Foreground="WhiteSmoke"
                       HorizontalAlignment="Center"
                       x:Name="TextRemainingTime"
                       Text="{Binding RemainingTimespan, StringFormat=\{0:g\}}">
            </TextBlock>

            <ProgressBar x:Name="ShutDownProgress"
                         Minimum="0"
                         Maximum="{Binding SelectedTime}"
                         Value="{Binding RemainingTime}"
                         BorderThickness="0"
                         Foreground="#0271bb"
                         Background="WhiteSmoke"
                         Height="80"
                         Width="360"
                         Margin="5" />

            <Button x:Name="CancelButton"
                    Style="{StaticResource DefaultButton}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Width="{Binding ElementName=ShutDownProgress,Path=ActualWidth}"
                    Height="{Binding ElementName=ShutDownProgress,Path=ActualHeight}"
                    Content="Cancel"
                    FontSize="32"
                    Click="CancelButton_Click">
            </Button>

        </StackPanel>

    </DockPanel>

</Window>
